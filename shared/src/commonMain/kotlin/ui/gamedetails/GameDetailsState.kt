package ui.gamedetails

import data.Player
import data.Round

data class GameDetailsState(
    //TODO: Remove mocked data
    val players: List<Player> = listOf("Player 1", "Player 2", "Player 3", "Playeeeeeeer 3", "Player 3", "Player 3", "Player 3", "Player 3").map {
        Player(
            it
        )
    },
    val rounds: List<Round> = listOf(
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 2, 0, 0, 10, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 70, 0, 0, 0)),
        Round(listOf(0, 0, 350, 0, 0, 0, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 0, 30, 0, 0, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 20, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 50, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 10, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 10, 0, 0, 0, 0, 0)),
        Round(listOf(0, 20, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 20, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 40, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 20, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 20, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 50, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 10, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 10, 0, 0, 0, 0, 0)),
        Round(listOf(0, 20, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 20, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 10, 0, 20, 50, 0, 30, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 40, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
        Round(listOf(0, 0, 0, 0, 0, 0, 0, 0)),
    ),
)
